//If at current moment, left leftheight - rightheight <=1 
//then it's a balanced binary tree

/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {boolean}
 */
var tree_height = function(root){
    
    if(root == null) return 0;
    
    let left = tree_height(root.left);
    if(left == -1) return -1;
    
    let right = tree_height(root.right);
    if(right == -1) return -1;
    
    if(Math.abs(left - right) > 1) return -1;
    
    return (Math.max(left,right) + 1);
    
}
var isBalanced = function(root) {
    return tree_height(root) != -1;
};